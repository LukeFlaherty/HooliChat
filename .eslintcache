[{"/Users/lukeflaherty/dev/reactFirebaseMessenger/messenger/src/index.js":"1","/Users/lukeflaherty/dev/reactFirebaseMessenger/messenger/src/App.js":"2","/Users/lukeflaherty/dev/reactFirebaseMessenger/messenger/src/reportWebVitals.js":"3","/Users/lukeflaherty/dev/reactFirebaseMessenger/messenger/src/Message.js":"4","/Users/lukeflaherty/dev/reactFirebaseMessenger/messenger/src/firebase.js":"5"},{"size":500,"mtime":1611793674444,"results":"6","hashOfConfig":"7"},{"size":2981,"mtime":1611868003106,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1611793674446,"results":"9","hashOfConfig":"7"},{"size":1134,"mtime":1611868270199,"results":"10","hashOfConfig":"7"},{"size":807,"mtime":1611869477753,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"qt0xnw",{"filePath":"15","messages":"16","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/lukeflaherty/dev/reactFirebaseMessenger/messenger/src/index.js",[],["25","26"],"/Users/lukeflaherty/dev/reactFirebaseMessenger/messenger/src/App.js",["27","28","29"],"import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { Button, FormControl, InputLabel, Input } from '@material-ui/core';\nimport Message from './Message';\nimport db from './firebase';\nimport firebase from 'firebase';\nimport FlipMove from 'react-flip-move';\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from '@material-ui/core';\n\n\nfunction App() {\n  // initializing state\n  const [input, setInput] = useState('');\n  // use another peice of state to store messages\n  const [messages, setMessages] = useState([]);\n  // to remember user\n  const [username, setUsername] = useState('');\n\n  // useState is a variable in react and useEffect is a block of code that gets executed based on a condition\n  useEffect(() => {\n    // const name = prompt('Enter your name:');\n    setUsername(prompt('Enter your name:'))\n  }, [] ) //condition goes [], if it blank than it loads when app component loads\n\n  // run once when the app loads and none after that\n  // reads from the db and outputs the previous messages\n  // had to do funky stuff with firebase permissions\n  useEffect(() => {\n    db.collection('messages')\n    .orderBy('timestamp', 'desc')\n    .onSnapshot(snapshot => {\n      setMessages(snapshot.docs.map(doc => ({id: doc.id, message: doc.data()})))\n    });\n  }, [] )\n\n\n  const sendMessage = (event) => {\n    // stops the form from refreshing\n    event.preventDefault();\n\n    // sending to db\n    // server timestamp is huge\n    db.collection('messages').add({\n      message: input,\n      username: username,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    })\n\n    // going to put all the logic to send a message here\n    // push to array state\n    // ... says to space out the input in the array OR keep all current but append to the end\n    // setMessages([...messages, {username: username, text: input}])\n\n    //clear the input once sent\n    setInput('');\n  }\n\n  return (\n    <div className=\"App\">\n      <img src=\"https://hoolichat.com/wp-content/uploads/2020/04/HooliChat-e1587758763209.jpg\" />\n\n      <form className=\"app__form\">\n      \n      <FormControl className=\"app__formControl\">\n        <Input className=\"app__input\" value={input} placeholder=\"say hello...\" onChange={event => setInput(event.target.value)}/>\n        <IconButton className=\"app__iconButton\" disabled={!input} variant=\"contained\" color=\"primary\" type='submit' onClick={sendMessage}>\n          <SendIcon />\n        </IconButton>\n        {/* <Button disabled={!input} variant=\"contained\" color=\"primary\" type='submit' onClick={sendMessage}>Send Message</Button> */}\n      </FormControl>\n\n      </form>\n\n      <FlipMove>\n      {\n        // easy way to loop through and return html\n        // the key is very important, take it out and see what happens\n        messages.map(({id, message}) => (\n          <Message key={id} username={username} message={message} />\n        ))\n      }\n      </FlipMove>\n\n    </div>\n  );\n}\n\nexport default App;\n","/Users/lukeflaherty/dev/reactFirebaseMessenger/messenger/src/reportWebVitals.js",[],"/Users/lukeflaherty/dev/reactFirebaseMessenger/messenger/src/Message.js",[],"/Users/lukeflaherty/dev/reactFirebaseMessenger/messenger/src/firebase.js",[],["30","31"],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":3,"column":10,"nodeType":"38","messageId":"39","endLine":3,"endColumn":16},{"ruleId":"36","severity":1,"message":"40","line":3,"column":31,"nodeType":"38","messageId":"39","endLine":3,"endColumn":41},{"ruleId":"41","severity":1,"message":"42","line":61,"column":7,"nodeType":"43","endLine":61,"endColumn":98},{"ruleId":"32","replacedBy":"44"},{"ruleId":"34","replacedBy":"45"},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'InputLabel' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["46"],["47"],"no-global-assign","no-unsafe-negation"]